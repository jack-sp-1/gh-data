# This is a basic workflow to help you get started with Actions

name: Python script
concurrency: 
  group : ${{github.workflow}} - ${{github.ref}}
  cancel-in-progress : false 

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environ_install_e1:
        description: 'whether deploying to E1 is req'
        default: 'YES'
        required: True
        type: String

      environ_install_e2:
        description: 'whehter deploying to E2'
        default: 'NO'
        required: true
        type: String

      dir_include_regex:
        description: ' directory to be included'
        default: ''
        required: True
        type: String  
 


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
     aaa: ${{ steps.runn.outputs.aaa}}
     bbb: ${{ steps.runn.outputs.bbb}}
     istl_in_e3: ${{ steps.runn.outputs.istl_in_e3}}


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: runn
        id: runn      
        env:
          AZURE_SECRET_TOKEN: ${{ secrets.AZURE_SECRET_TOKEN }}
        run: python .github/workflows/example.py  
        #python -c "import sys; print(sys.version) ;print(f'::set-output name=aaa::5')";
        #echo "::set-output name=aaaa::world" 
        
      - name: Output filename
        run: |
          echo "${{steps.runn.outputs.istl_in_e3}}"
          echo "install in E3: ${{inputs.environ_install_e1}}"
      - name: checkout
        uses:  actions/checkout@v3 # Necessary to access local action
      - name : using walking 
        uses:  jack-sp-1/gh-first-action/walk_list 
        id: walking
        with:
          walk_type: '--return_files'
          output_delim: ' '
          dir_include_regex: ${{inputs.dir_include_regex}}
          file_exclude_regex: '.json'
          dir_exclude_regex: 'assets'
